{"version":3,"sources":["assets/img/logo.png","layouts/AppHeader.js","layouts/AppSidebar.js","layouts/AppFooter.js","layouts/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Search","Input","AppHeader","state","visibleDrawer","isOpen","this","setState","id","style","backgroundColor","justify","className","shape","size","src","require","placeholder","onSearch","value","console","log","type","icon","BellOutlined","color","UserOutlined","MenuFoldOutlined","onClick","toggleDrawer","placement","closable","onClose","visible","Text","HeartTwoTone","twoToneColor","TagsTwoTone","BookTwoTone","BellTwoTone","Component","Sider","AppSidebar","theme","Footer","AppFooter","Content","AppLayout","props","children","visibility","primaryColor","App","responseFacebook","response","responseGoogle","basename","gutter","xs","sm","md","lg","xl","title","appId","autoLoad","fields","callback","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a0a897ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a526f250.png\";","import React, { Component } from 'react'\nimport { Layout, Menu, Drawer, Button, Avatar, Row, Col, Typography, Input, Divider } from 'antd';\nimport {\n    MenuFoldOutlined,\n    UserOutlined,\n    BellOutlined,\n    HeartTwoTone,\n    TagsTwoTone,\n    BookTwoTone,\n    BellTwoTone\n} from '@ant-design/icons';\n\nconst { Header } = Layout;\nconst { Search } = Input;\n\nexport default class AppHeader extends Component {\n    state = {\n        visibleDrawer: false\n    }\n\n    toggleDrawer(isOpen) {\n        this.setState({ visibleDrawer: isOpen })\n    }\n\n    render() {\n        var { visibleDrawer } = this.state;\n\n        return (\n            <Header id=\"custom-header\" style={{ backgroundColor: '#d0021a' }}>\n                <Row justify=\"space-between\">\n                    <Col className=\"d-flex justify-content-between align-items-center\">\n                        <div className=\"logo\">\n                            <Avatar shape=\"square\" size={40} src={require('../assets/img/logo.png')} />\n                        </div>\n                        <Search\n                            className=\"custom-searchbox ml-4\"\n                            placeholder=\"input search text\"\n                            onSearch={value => console.log(value)}\n                        // style={{ width: 200 }}\n                        />\n                    </Col>\n                    <Col id=\"custom-desktop-menu\">\n                        <Button type=\"link\" icon={<BellOutlined style={{ color: '#fff' }} />} />\n                        <Button type=\"link\" icon={<UserOutlined style={{ color: '#fff' }} />} />\n                    </Col>\n                    <Col id=\"custom-mobile-menu\">\n                        <Button type=\"link\" icon={<MenuFoldOutlined style={{ color: '#fff' }} />} onClick={() => this.toggleDrawer(true)} />\n                    </Col>\n                </Row>\n                {/* <div className=\"logo\">\n                    <Avatar shape=\"square\" size={40} src={require('../assets/img/logo.png')} />\n                </div>\n\n                <Button type=\"primary\" icon={<MenuFoldOutlined />} onClick={() => this.toggleDrawer(true)} /> */}\n\n\n                <Drawer\n                    // title=\"Basic Drawer\"\n                    placement=\"right\"\n                    closable={false}\n                    onClose={() => this.toggleDrawer(false)}\n                    visible={visibleDrawer}\n                >\n                    <div className=\"d-flex justify-content-start align-items-center sidebar-mobile-items\">\n                        <Avatar src=\"https://avatarfiles.alphacoders.com/165/165268.png\" size={20} />\n                        <Typography.Text className=\"mb-0 ml-2\">Pham Anh Thu</Typography.Text>\n                    </div>\n                    <Divider className=\"custom-sidebar-divider\" />\n                    <div className=\"d-flex justify-content-start align-items-center sidebar-mobile-items\">\n                        <HeartTwoTone twoToneColor=\"#dd1818\" className=\"sidebar-icon\" />\n                        <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                    </div>\n                    <Divider className=\"custom-sidebar-divider\" />\n                    <div className=\"d-flex justify-content-start align-items-center sidebar-mobile-items\">\n                        <TagsTwoTone twoToneColor=\"#f39c12\" className=\"sidebar-icon\" />\n                        <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                    </div>\n                    <Divider className=\"custom-sidebar-divider\" />\n                    <div className=\"d-flex justify-content-start align-items-center sidebar-mobile-items\">\n                        <BookTwoTone twoToneColor=\"#3498db\" className=\"sidebar-icon\" />\n                        <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                    </div>\n                    <Divider className=\"custom-sidebar-divider\" />\n                    <div className=\"d-flex justify-content-start align-items-center sidebar-mobile-items\">\n                        <BellTwoTone twoToneColor=\"#8e44ad\" className=\"sidebar-icon\" />\n                        <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                    </div>\n                    <Divider className=\"custom-sidebar-divider\" />\n                    <div className=\"d-flex justify-content-start align-items-center sidebar-mobile-items\">\n                        <UserOutlined className=\"sidebar-icon\" />\n                        <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                    </div>\n                    <Divider className=\"custom-sidebar-divider\" />\n                    <Search\n                        className=\"custom-searchbox-mobile\"\n                        placeholder=\"input search text\"\n                        onSearch={value => console.log(value)}\n                    />\n                </Drawer>\n            </Header>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Layout, List, Avatar, Divider, Typography } from 'antd';\nimport {\n    HeartTwoTone,\n    TagsTwoTone,\n    BookTwoTone\n} from '@ant-design/icons';\n\nconst { Sider } = Layout;\n\nexport default class AppSidebar extends Component {\n    render() {\n        return (\n            <Sider theme=\"light\">\n                <div className=\"d-flex justify-content-start align-items-center sidebar-items sidebar-items-active\">\n                    <Avatar src=\"https://avatarfiles.alphacoders.com/165/165268.png\" size={20} />\n                    <Typography.Text className=\"mb-0 ml-2\">Pham Anh Thu</Typography.Text>\n                </div>\n                <div className=\"d-flex justify-content-start align-items-center sidebar-items\">\n                    <HeartTwoTone twoToneColor=\"#dd1818\" className=\"sidebar-icon\" />\n                    <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                </div>\n                <div className=\"d-flex justify-content-start align-items-center sidebar-items\">\n                    <TagsTwoTone twoToneColor=\"#f39c12\" className=\"sidebar-icon\" />\n                    <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                </div>\n                <div className=\"d-flex justify-content-start align-items-center sidebar-items\">\n                    <BookTwoTone twoToneColor=\"#3498db\" className=\"sidebar-icon\" />\n                    <Typography.Text className=\"mb-0 ml-2\">Sidebar Item 1</Typography.Text>\n                </div>\n            </Sider>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\nexport default class AppFooter extends Component {\n    render() {\n        return (\n            <Footer>\n                BKGallery ©2020\n            </Footer>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AppHeader from './AppHeader';\nimport AppSidebar from './AppSidebar';\nimport AppFooter from './AppFooter';\nimport { Layout } from 'antd';\nimport DynamicAntdTheme from 'dynamic-antd-theme';\n\nconst { Content } = Layout;\n\nexport default class AppLayout extends Component {\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <AppHeader></AppHeader>\n                    <Content id=\"main-content-wrapper\" >\n                        <Layout>\n                            <AppSidebar></AppSidebar>\n                            <Content id=\"main-content\">\n                                {this.props.children}\n                            </Content>\n                        </Layout>\n                    </Content>\n                    <AppFooter></AppFooter>\n\n\n                </Layout>\n                <div style={{visibility: 'hidden'}}>\n                    <DynamicAntdTheme primaryColor='#dd1818' />\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport AppLayout from './layouts';\nimport { Card, Row, Col, Button } from 'antd';\nimport { BrowserRouter } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\n// css\nimport 'antd/dist/antd.css';\nimport './assets/css/custom.css';\n\nexport default class App extends Component {\n  responseFacebook = (response) => {\n    console.log(response);\n  }\n\n  responseGoogle = (response) => {\n    console.log(response);\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename={\"/test\"}>\n      <AppLayout>\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          <Col xs={24} sm={24} md={16} lg={16} xl={16}>\n            <Card title=\"Content\">\n              <Button type=\"primary\">Hello</Button>\n              <FacebookLogin\n                appId=\"1951615681826197\"\n                autoLoad={true}\n                fields=\"name,email,picture\"\n                // onClick={componentClicked}\n                callback={this.responseFacebook}\n              />\n              <GoogleLogin\n                clientId=\"1058609423658-7p3akqq09m4em7djhn41on8igjai4ivp.apps.googleusercontent.com\"\n                buttonText=\"Login\"\n                onSuccess={this.responseGoogle}\n                onFailure={this.responseGoogle}\n                cookiePolicy={'single_host_origin'}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n            <Card></Card>\n          </Col>\n        </Row>\n      </AppLayout>\n      </BrowserRouter>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}